2019-09-09  tasogare66

	* libalgo
	https://tubo28.me/compprog/algorithm/
	https://inzkyk.github.io/algorithms/

	https://github.com/ei1333/library
	graph参考

	* AOJ:
	graphの問題
	https://onlinejudge.u-aizu.ac.jp/courses/library/5/GRL/4/GRL_4_B

	* joi:
	https://joi.goodbaton.com/

2019-06-15  tasogare66

	* ABC:
	abc140_e,set、 agc005,setと問題的に近い
	順列の最小or最大の和
	abc123_d,半分全列挙
	abc115_d,再帰,どこまで進んだかで再帰を分岐
	abc109_d,重複しない移動の方法
	abc102_d,区間スケジューリング問題
	abc023_d,最小値の最大化、2分探索(p.132) [arc050_b]

	* ARC_A:

	* AGC_B:
	agc004_b,微妙に解説AC
	agc005_b,set
	agc019_b,算数

	* AGC_A:
	agc007_a,WAとれず
	agc017_a
	agc035_a,嘘解法
	agc036_a

2019-06-15  tasogare66

	* bitをカウント: gcc拡張
    auto num = __builtin_popcountll(msk);

	* 桁DP:
	https://freestylewiki.xyz/fswiki/wiki.cgi?page=%E5%8B%95%E7%9A%84%E8%A8%88%E7%94%BB%E6%B3%95%EF%BC%88%E6%A1%81%EF%BC%A4%EF%BC%B0%EF%BC%89
	abc007_d.cpp
	abc129_e.cpp 2進数のやつ

2019-05-27  tasogare66

	* stl:
	setからvectorのコピー
	unordered_set<ll> tbl;
	vector<ll> ans(tbl.size()); //setからvectorのコピー,確保しておく or std::back_inserter(output)
    std::copy(tbl.begin(), tbl.end(), ans.begin()); //setからvectorのコピー

	sortしてuniqueにする。
	std::sort(vec.begin(), vec.end());
  	vec.erase(std::unique(vec.begin(), vec.end()), vec.end());

	* sort:
	降順、return a.a > b.a;
	昇順、return a.a < b.a;

2019-05-16  tasogare66

	* precompile:
	./precompile.sh でprecompile

	-g3 オプションつけるとgch使われなかった。

2019-05-16  tasogare66

	* memo:
	最大公約数
	abc_125_c.cpp
	calc_gdc

	約数の列挙
	divisor
	O(√N)
	diverta2019_d.cpp

	nCk mod. p
	http://drken1215.hatenablog.com/entry/2018/06/08/210000
	1000000007 で割ったあまり
	https://qiita.com/drken/items/3b4fdf0a78e7a138cd9a

2019-04-20  tasogare66

	* memo:
	順列、組み合わせ
	https://kamino.hatenablog.com/entry/cpp-permutation-combination

	組み合わせの列挙
	abc089_c.cpp

	* memo:
	重複を削除する
	sort(a2.begin(),a2.end());
    a2.erase(std::unique(a2.begin(), a2.end()), a2.end());

2019-04-02  tasogare66

	* index:
	幅優先探索
	abc007_c2.cpp
	abc021.cpp

	二分探索(binary_search)
	abc013_c.cpp

	ワーシャルフロイド(warshall_floyd)
	abc022_c.cpp
	abc079_d.cpp

	* memo:
	テキストをcinに入れれる。
#if 0
  	std::ifstream in("input.txt");
  	std::cin.rdbuf(in.rdbuf());
#endif

	スペースで分割しないで、文字列1行読む場合
	string s;
	getline(cin,s);

	桁
	cout<<fixed<<std::setprecision(10)

	* competive:
	https://qiita.com/AokabiC/items/e9312856f588dd9303ed
	precompileとか
	http://koturn.hatenablog.com/entry/2018/07/29/180000
	https://tokumini.hatenablog.com/

	* rake:
	ソースファイルの先頭にurlのコメントアウトを記述する。

	サンプルケースのダウンロード
	rake dl_test CPP_SRC=agc024_a.cpp
	テストの実行
	rake invoke_test CPP_SRC=agc024_a.cpp
	ソース提出
	rake submit CPP_SRC=agc024_a.cpp

	cppのファイルを開いた状態で。
	vscode CTRL+P > task[space] で、タスクを選択できる。

	* test: online judge tools
	https://github.com/kmyk/online-judge-tools
	https://kimiyuki.net/blog/2017/01/19/pr-online-judge-tools/

	sudo pip3 install online-judge-tools
	でいれた。wslから実行
	更新
	sudo pip3 install --upgrade online-judge-tools

	oj dl URL
	oj test(oj t)
	oj login URL

	./ojdl.sh URL
	で、testディレクトリのファイル削除して、oj dl して、input.txtも更新する。

	* compile:
	g++ -std=c++11 -g -O0 aaa.cpp

	* install:
	sudo apt install build-essential

	sudo apt install gdb

	WSL workspaceFolder入れた。
	"${command:extension.vscode-wsl-workspaceFolder}", で"${workspaceFolder}" が置き換えられる。/mnt/c/

	Meta-snippet for Visual Studio Code入れた。
	スニペット作成用

	* setup:
	-ubuntu
	sudo apt update
	sudo apt upgrade
	sudo apt autoremove

	-gcc
	sudo apt install build-essential
	sudo apt install gdb

	-online-judge-tools
	sudo apt install python3-pip
	sudo pip3 install online-judge-tools

以上
